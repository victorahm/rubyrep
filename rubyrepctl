#!/bin/bash
CONFIG="replication.conf"
RUBYREP="bin/rubyrep"
LOGFILE="replication.log"

function is_running(){
 PID=""
 PID=`ps -Af | grep rubyrep| grep replicate |gawk '{print $2}'`
 if [ ! -n "$PID" ]; then
	PID=""
 fi

}

function start(){
  is_running
  if [ -n "$PID" ]; then
    echo "Replication is already running"
	exit 1
  fi

  if [ ! -f $CONFIG ] || [ ! -r $CONFIG ]; then
    echo "Configuration file is not readable"
    exit 1
  fi
  if [ ! -f $RUBYREP ] || [ ! -x $RUBYREP ] ; then
    echo "Rubyrep executable cannot be executed"
    exit 1
  fi
  echo "Starting rubyrep replication"
  $RUBYREP replicate -c $CONFIG 2>&1 | gawk '{print strftime("%Y-%m-%d %T",systime()), $0; fflush();}' >> $LOGFILE &
}

function stop(){
  is_running
  if [ -n "$PID" ]; then
    kill $PID > /dev/null
  fi
}

function restart(){
  is_running
  if [ -n "$PID" ]; then
    $0 stop
    sleep 1
  fi
  $0 start
}

function scan(){
  echo "Starting rubyrep scan"
  $RUBYREP scan -c $CONFIG 2>&1 | gawk '{print strftime("%Y-%m-%d %T",systime()), $0; fflush();}'
}

function sync(){
  echo "Starting rubyrep sync"
  $RUBYREP sync -c $CONFIG 2>&1 | gawk '{print strftime("%Y-%m-%d %T",systime()), $0; fflush();}'
}

case "$1" in
  start) start;;
  stop) stop;;
  restart) restart;;
  scan) scan;;
  sync) sync;;
  test) # This ones sort of a secret that I used for testing if the function test_running() was working or not
    is_running
    if [ -n "$PID" ]; then
      echo "RubyRep is running on PID $PID"
    else
      echo "RubyRep is not running"
    fi
    ;;
  *) echo "Usage: $0 {start|stop|restart|scan|sync|test}" ;;
esac

exit 0
